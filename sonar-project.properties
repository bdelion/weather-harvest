# Clé unique pour identifier ce projet dans SonarCloud. 
# Elle doit correspondre à ce que tu as défini sur SonarCloud.
sonar.projectKey=bdelion_weather-harvest

# Identifiant de ton organisation sur SonarCloud. 
# Assure-toi que cela correspond à ton organisation.
sonar.organization=bdelion-github

# Le nom du projet tel qu'il apparaîtra dans l'interface SonarCloud.
# Ceci peut être modifié pour refléter le nom que tu veux afficher.
sonar.projectName=weather-harvest

# Le langage est automatiquement détecté par SonarCloud, donc cette ligne est optionnelle.
# Si tu souhaites forcer un langage particulier, laisse-le, sinon supprime-le.
# Cette ligne est généralement inutile, car SonarCloud détecte le langage automatiquement.
sonar.language=js

# Répertoire contenant les fichiers sources à analyser.
# Assure-toi que 'src/' contient bien tous les fichiers de ton projet que tu veux analyser.
# sonar.sources=src/
sonar.sources=src/,eslint.config.mjs,jest.config.mjs

# Répertoire contenant les fichiers de tests à analyser.
# Assure-toi que 'tests/' contient bien tous tes fichiers de test.
sonar.tests=tests/

# Si tu n'utilises pas JaCoCo (ce qui semble être le cas ici), cette ligne peut être laissée vide ou supprimée.
# Cela indique à SonarCloud de ne pas chercher de rapport JaCoCo.
sonar.coverage.jacoco.xmlReportPaths=

# Rapports ESLint
sonar.eslint.reportPaths=eslint-report/eslint-report.json

# Spécifie le chemin vers ton rapport de couverture au format LCOV généré par tes tests.
# Assure-toi que le fichier coverage/lcov.info est bien généré dans ton pipeline de tests.
sonar.javascript.lcov.reportPaths=coverage/lcov.info

# Exemples d'exclusions (facultatif) :
# Si tu veux exclure certains fichiers ou répertoires de l'analyse, tu peux ajouter ces lignes.
# Par exemple, pour exclure les fichiers dans 'node_modules' ou dans 'tests'.
sonar.exclusions=**/node_modules/**,eslint.config.mjs,jest.config.mjs
